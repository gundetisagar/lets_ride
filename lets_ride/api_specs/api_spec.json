{
  "swagger": "2.0",
  "host": "127.0.0.1:8080",
  "basePath": "/api/lets_ride",
  "info": {
    "version": "1.0.0",
    "title": "LET'S RIDE",
    "description": "Let's Ride api specs"
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users",
        "superuser": "super user permission"
      },
      "type": "oauth2"
    }
  },
  "paths": {
    "/ride_request/v1/": {
      "post": {
        "operationId": "ride_request",
        "summary": "ride request for user travelling",
        "parameters": [
          {
            "$ref": "#/parameters/RideRequestParameter"
          }
        ],
        "security": [
          {
            "oauth": [
              "read",
              "write",
              "update",
              "superuser"
            ]
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateResponse"
          },
          "400": {
            "$ref": "#/responses/InvalidRideRequestResponse"
          }
        }
      },
      "get": {
        "operationId": "my_ride_requests",
        "summary": "my ride requests details",
        "parameters": [
          {
            "$ref": "#/parameters/OffsetParameter"
          },
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/SortParameter"
          },
          {
            "$ref": "#/parameters/SortByParameter"
          },
          {
            "$ref": "#/parameters/FilterBy"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/MyRideRequestsResponse"
          }
        }
      }
    },
    "/share_ride/v1/": {
      "post": {
        "operationId": "share_ride",
        "summary": "share ride for user travelling",
        "parameters": [
          {
            "$ref": "#/parameters/ShareRideParameter"
          }
        ],
        "security": [
          {
            "oauth": [
              "read",
              "write",
              "update",
              "superuser"
            ]
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateResponse"
          },
          "400": {
            "$ref": "#/responses/InvalidShareRideResponse"
          }
        }
      }
    },
    "/asset_request/v1/": {
      "post": {
        "operationId": "asset_request",
        "summary": "asset request for whom are in travelling",
        "parameters": [
          {
            "$ref": "#/parameters/AssetTransportRequestParameter"
          }
        ],
        "security": [
          {
            "oauth": [
              "read",
              "write",
              "update",
              "superuser"
            ]
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateResponse"
          },
          "400": {
            "$ref": "#/responses/InvalidAssetTransportRequestResponse"
          }
        }
      },
      "get": {
        "operationId": "my_requests_assets",
        "summary": "my asset requests details",
        "parameters": [
          {
            "$ref": "#/parameters/OffsetParameter"
          },
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/SortParameter"
          },
          {
            "$ref": "#/parameters/SortByParameter"
          },
          {
            "$ref": "#/parameters/FilterBy"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/MyAssetRequestsResponse"
          }
        }
      }
    },
    "/share_travel_info/v1/": {
      "post": {
        "operationId": "share_travel_info",
        "summary": "share travel info for whom are in travelling",
        "parameters": [
          {
            "$ref": "#/parameters/ShareTravelInfoParameter"
          }
        ],
        "security": [
          {
            "oauth": [
              "read",
              "write",
              "update",
              "superuser"
            ]
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateResponse"
          },
          "400": {
            "$ref": "#/responses/InvalidShareTravelInfoResponse"
          }
        }
      }
    }
  },
  "parameters": {
    "RideRequestParameter": {
      "name": "ride_request_parameters",
      "in": "body",
      "description": "Ride Request Details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/RideRequestDefinition"
      }
    },
    "ShareRideParameter": {
      "name": "share_ride_parameters",
      "in": "body",
      "description": "Share Ride Details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ShareRideDefinition"
      }
    },
    "AssetTransportRequestParameter": {
      "name": "asset_transport_request_parameters",
      "in": "body",
      "description": "Share Ride Details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/AssetTransportRequestDefinition"
      }
    },
    "ShareTravelInfoParameter": {
      "name": "share_travel_info_parameters",
      "in": "body",
      "description": "Share Ride Details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ShareTravelInfoDefinition"
      }
    },
    "OffsetParameter": {
      "name": "offset query parameter",
      "in": "query",
      "description": "enter valid offset value",
      "required": true,
      "type": "number"
    },
    "LimitParameter": {
      "name": "Limit query parameter",
      "in": "query",
      "description": "enter valid limit value",
      "required": true,
      "type": "number"
    },
    "SortParameter": {
      "name": "sort fields",
      "in": "query",
      "description": "give valid field for sort",
      "required": true,
      "type": "string",
      "enum": [
        "published_at",
        "from_place",
        "to_place"
      ]
    },
    "SortByParameter": {
      "name": "sort by fields",
      "in": "query",
      "description": "give valid sorting order",
      "required": true,
      "type": "string",
      "enum": [
        "DESCENDING",
        "ASCENDING"
      ]
    },
    "FilterBy": {
      "name": "filter on status",
      "in": "query",
      "description": "filter on status",
      "required": true,
      "type": "string",
      "enum": [
        "ALL",
        "PENDING",
        "EXPIRED",
        "CONFIRM"
      ]
    }
  },
  "responses": {
    "CreateResponse": {
      "description": "Successfully Created"
    },
    "InvalidRideRequestResponse": {
      "description": "raise error when given invalid responses",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "format": "int32"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "InvalidToPlace",
              "InvalidDatetime",
              "InvalidEndDatetime",
              "InvalidNoOfSeats",
              "InvalidLuggageQuantity"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "InvalidShareRideResponse": {
      "description": "raise error when given invalid responses",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "format": "int32"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "InvalidToPlace",
              "InvalidDatetime",
              "InvalidEndDatetime",
              "InvalidNoOfSeatsAvailable",
              "InvalidAssetsQuantity"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "InvalidAssetTransportRequestResponse": {
      "description": "raise error when given invalid responses",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "format": "int32"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "InvalidToPlace",
              "InvalidDatetime",
              "InvalidEndDatetime",
              "InvalidNoOfAssets",
              "InvalidOthersField",
              "InvalidWhomToDeliver"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "InvalidShareTravelInfoResponse": {
      "description": "raise error when given invalid responses",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "format": "int32"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "InvalidToPlace",
              "InvalidDatetime",
              "InvalidEndDatetime",
              "InvalidAssetsQuantity"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "MyRideRequestsResponse": {
      "description": "returns person's ride requests",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MyRequestsRideDefinition"
        }
      }
    },
    "MyAssetRequestsResponse": {
      "description": "returns person's asset requests",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MyRequestsAssetDefinition"
        }
      }
    }
  },
  "definitions": {
    "FromAndToPlacesWithTimings": {
      "type": "object",
      "properties": {
        "from_place": {
          "type": "string"
        },
        "to_place": {
          "type": "string"
        },
        "date_time": {
          "type": "string",
          "format": "date-time"
        },
        "flexible_timings": {
          "type": "boolean"
        },
        "start_date_time": {
          "type": "string",
          "format": "date-time"
        },
        "end_date_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "from_place",
        "to_place",
        "flexible_timings"
      ]
    },
    "RideRequest": {
      "type": "object",
      "properties": {
        "no_of_seats": {
          "type": "integer",
          "format": "int32"
        },
        "luggage_quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "no_of_seats",
        "luggage_quantity"
      ]
    },
    "RideRequestDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/FromAndToPlacesWithTimings"
        },
        {
          "$ref": "#/definitions/RideRequest"
        }
      ]
    },
    "ShareRide": {
      "type": "object",
      "properties": {
        "no_of_seats_available": {
          "type": "integer",
          "format": "int32"
        },
        "assets_quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "no_of_seats_available",
        "assets_quantity"
      ]
    },
    "ShareRideDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/FromAndToPlacesWithTimings"
        },
        {
          "$ref": "#/definitions/ShareRide"
        }
      ]
    },
    "AssetTransportRequest": {
      "type": "object",
      "properties": {
        "no_of_assets": {
          "type": "integer",
          "format": "int32"
        },
        "asset_type": {
          "type": "string",
          "enum": [
            "PARCEL",
            "BAG",
            "FURNITURE",
            "OTHER"
          ]
        },
        "other": {
          "type": "string"
        },
        "asset_sensitivity": {
          "type": "string",
          "enum": [
            "SENSITIVE",
            "HIGHLY_SENSITIVE",
            "ELECTRONIC"
          ]
        },
        "whom_to_deliver": {
          "type": "string"
        }
      },
      "required": [
        "no_of_assets",
        "asset_type",
        "asset_sensitivity",
        "whom_to_deliver"
      ]
    },
    "AssetTransportRequestDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/FromAndToPlacesWithTimings"
        },
        {
          "$ref": "#/definitions/AssetTransportRequest"
        }
      ]
    },
    "ShareTravelInfo": {
      "type": "object",
      "properties": {
        "travel_medium": {
          "type": "string",
          "enum": [
            "BUS",
            "CAR",
            "FLIGHT"
          ]
        },
        "assets_quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "travel_medium",
        "assets_quantity"
      ]
    },
    "ShareTravelInfoDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/FromAndToPlacesWithTimings"
        },
        {
          "$ref": "#/definitions/ShareTravelInfo"
        }
      ]
    },
    "UserProfileDefinition": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mobile_number": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "mobile_number"
      ]
    },
    "MyRequestsRide": {
      "type": "object",
      "properties": {
        "accepted_person": {
          "$ref": "#/definitions/UserProfileDefinition"
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONFIRM",
            "EXPIRED"
          ]
        }
      }
    },
    "MyRequestsRideDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/RideRequestDefinition"
        },
        {
          "$ref": "#/definitions/MyRequestsRide"
        }
      ]
    },
    "MyRequestsAssetDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetTransportRequestDefinition"
        },
        {
          "$ref": "#/definitions/MyRequestsRide"
        }
      ]
    }
  }
}